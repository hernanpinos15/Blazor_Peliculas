@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject IMostrarMensajes mostrarMensajes

<h3>Crear Película</h3>

@if (MostrarFormulario)
{
    <FormularioMovie Movie="Movie" OnValidSubmit="Crear"
                     GenerosNoSeleccionados="GenerosNoSeleccionados">
    </FormularioMovie>
}
else
{
    <text>Cargando...</text>
}

@code {
    private bool MostrarFormulario { get; set; } = false;
    private Movie Movie = new Movie();
    private List<Gender> GenerosNoSeleccionados = new List<Gender>();

    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<Gender>>("api/gender");
        GenerosNoSeleccionados = responseHttp.Response;
        MostrarFormulario = true;
    }

    async Task Crear()
    {
        var httpResponse = await repositorio.Post<Movie, int>("api/movies", Movie);
        if (httpResponse.Error)
        {
            var mensajeError = await httpResponse.GetBody();
            await mostrarMensajes.MostrarMensajeError(mensajeError);
        }
        else
        {
            var MovieId = httpResponse.Response;
            navigationManager.NavigateTo($"/pelicula/{MovieId}/{Movie.Title.Replace(" ", "-")}");
        }
    }
}
